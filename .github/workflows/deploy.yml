# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Deployment

on:
  push:
    branches: main

jobs:
  deploy-contract:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.12.0]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      # solves issue https://github.com/actions/setup-node/issues/214
      - name: Reconfigure git to use HTTP authentication
        run: >
          git config --global url."https://github.com/".insteadOf
          ssh://git@github.com/
      - name: Create env file
        run: >
          echo "ALCHEMY_API_KEY=${{ secrets.ALCHEMY_API_KEY }}" >> ./.env
          && echo "MNEMONIC=${{ secrets.MNEMONIC }}" >> ./.env
      - run: npm ci
      - name: Deploy
        run: npm run deploy-goerli

  deploy-server:
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          path: ${{ github.event.repository.name }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push image to DockerHub
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.APP_NAME }}:latest
      - name: Configure kubernetes.yml
        run: >
          sed -i "s/\$APP_NAME/${{ env.APP_NAME }}/g" ./kubernetes.yml
          && sed -i "s/\$DOCKERHUB_USERNAME/${{ secrets.DOCKERHUB_USERNAME }}/g" ./kubernetes.yml
          && sed -i "s/\$FIREBASE_CREDENTIALS/${{ secrets.FIREBASE_CREDENTIALS }}/g" ./kubernetes.yml
          && sed -i "s/\$POSTGRES_USER/${{ secrets.POSTGRES_USER }}/g" ./kubernetes.yml
          && sed -i "s/\$POSTGRES_PASSWORD/${{ secrets.POSTGRES_PASSWORD }}/g" ./kubernetes.yml
          && sed -i "s/\$POSTGRES_DB/${{ secrets.POSTGRES_DB }}/g" ./kubernetes.yml
          && sed -i "s/\$POSTGRES_HOST/${{ secrets.POSTGRES_HOST }}/g" ./kubernetes.yml
      - name: Create wallet-firebase-secrets.yml
        env:
          FIREBASE_SECRETS_YML: ${{ secrets.FIREBASE_SECRETS_YML }}
        run: echo "$FIREBASE_SECRETS_YML" > ${{ github.event.repository.name }}/wallet-firebase-secrets.yml
      - name: Debug
        run: cat ${{ github.event.repository.name }}/kubernetes.yml
      - name: Delete secrets from okteto
        uses: steebchen/kubectl@v2.0.0
        continue-on-error: true
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA }}
          command: delete -f ${{ github.event.repository.name }}/wallet-firebase-secrets.yml
      - name: Apply secrets to okteto
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA }}
          command: apply -f ${{ github.event.repository.name }}/wallet-firebase-secrets.yml
      - name: Delete deployment from okteto
        uses: steebchen/kubectl@v2.0.0
        continue-on-error: true
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA }}
          command: delete -f ${{ github.event.repository.name }}/kubernetes.yml
      - name: Apply deployment to okteto
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA }}
          command: apply -f ${{ github.event.repository.name }}/kubernetes.yml
